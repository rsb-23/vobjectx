name: unit-test
on: [ pull_request ]
jobs:
  coverage-test: # Tests code for base version and coverage
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4
      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install coverage[toml]

      - name: Run tests with coverage and enforce minimum
        run: |
          coverage run
          coverage report

      - name: Generate coverage XML
        run: coverage xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  run-tests: # Tests code for higher version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          python -m unittest discover -f
